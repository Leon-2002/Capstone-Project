/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.AdminPages;

import javax.swing.JOptionPane;
import com.DataHandler.InventoryHandler;
import com.DatabaseConnector.DatabaseConnector;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author loena
 */
public class Inventory extends javax.swing.JFrame {

    /**
     * Creates new form Inventory
     */
    public Inventory() {
        initComponents();
      

   // to add data to table
       try (Connection conn = DatabaseConnector.getConnection()) {
            String query = "SELECT * FROM inventorytable";
            PreparedStatement pstmt = conn.prepareStatement(query);              
            ResultSet rs = pstmt.executeQuery();
              
            
            // Center text in the JTable cells
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        centerRenderer.setVerticalAlignment(SwingConstants.CENTER);

            while (rs.next()) {
                // User exists with the provided username and password
                String id = String.valueOf(rs.getInt("id"));
                String name = rs.getString("equipment_name");
                String quantity = String.valueOf(rs.getInt("quantity"));
                String category = rs.getString("category");
                
                
                //String array for store data into jtable
                String tbData[] = {id,name,quantity, category};
                
                DefaultTableModel tblModel = (DefaultTableModel) InventoryTable.getModel();
                
                
                //add Strinf array dara into table
                tblModel.addRow(tbData);
                
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        EquipmentTf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        categoryCbx = new javax.swing.JComboBox<>();
        AddBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        InventoryTable = new javax.swing.JTable();
        QuantityTf = new javax.swing.JSpinner();
        idTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Inventory CRUD");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 20, 200, 34);

        jLabel2.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Category");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(230, 70, 145, 33);

        jLabel3.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Equipment name");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(50, 70, 145, 33);

        EquipmentTf.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(EquipmentTf);
        EquipmentTf.setBounds(50, 110, 132, 30);

        jLabel4.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Quantity");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(50, 160, 145, 33);

        categoryCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Biology", "Physics", "Chemistry", "Earth Science" }));
        jPanel1.add(categoryCbx);
        categoryCbx.setBounds(220, 110, 130, 30);

        AddBtn.setBackground(new java.awt.Color(102, 0, 255));
        AddBtn.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        AddBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn.setText("ADD");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });
        jPanel1.add(AddBtn);
        AddBtn.setBounds(50, 300, 100, 40);

        UpdateBtn.setBackground(new java.awt.Color(102, 0, 255));
        UpdateBtn.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        UpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        UpdateBtn.setText("UPDATE");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(UpdateBtn);
        UpdateBtn.setBounds(200, 300, 100, 40);

        DeleteBtn.setBackground(new java.awt.Color(102, 0, 255));
        DeleteBtn.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        DeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteBtn.setText("DELETE");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(DeleteBtn);
        DeleteBtn.setBounds(200, 390, 100, 40);

        ClearBtn.setBackground(new java.awt.Color(102, 0, 255));
        ClearBtn.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        ClearBtn.setForeground(new java.awt.Color(255, 255, 255));
        ClearBtn.setText("CLEAR");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });
        jPanel1.add(ClearBtn);
        ClearBtn.setBounds(50, 390, 100, 40);

        InventoryTable.setBackground(new java.awt.Color(255, 255, 255));
        InventoryTable.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        InventoryTable.setForeground(new java.awt.Color(0, 0, 0));
        InventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Equipment", "Quantity", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InventoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(InventoryTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(490, 30, 453, 480);
        jPanel1.add(QuantityTf);
        QuantityTf.setBounds(50, 200, 130, 30);
        QuantityTf.setValue(1);

        idTxt.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(idTxt);
        idTxt.setBounds(530, 270, 132, 30);
        idTxt.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 976, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:
        String equipment_name = EquipmentTf.getText().toLowerCase();
        int quantity= (int) QuantityTf.getValue();
        String category = (String) categoryCbx.getSelectedItem();
        
        
 if (equipment_name == null || equipment_name.trim().isEmpty()) {
    JOptionPane.showMessageDialog(null, "Please enter the equipment name.");
       return;
}
 if (quantity <= 0) {
        // Handle the case where the value is less than or equal to 0
        JOptionPane.showMessageDialog(null, "Please enter a valid number greater than 0.");
        return;
    }
 if(categoryCbx.getSelectedItem().equals("Select Category")){
                JOptionPane.showMessageDialog(null, "Please Select an item");
                return;
}
 else {
     InventoryHandler.AddInventory(equipment_name,quantity,category);
           
            
}
    
     EquipmentTf.setText("");
     categoryCbx.setSelectedItem("Select Category");
     QuantityTf.setValue(1);
     
     
     
     
     // clear the table before add
        DefaultTableModel model = (DefaultTableModel) InventoryTable.getModel();
        model.setRowCount(0);

        // to update the table
        try (Connection conn = DatabaseConnector.getConnection()) {
            String query = "SELECT * FROM inventorytable";
            PreparedStatement pstmt = conn.prepareStatement(query);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                // User exists with the provided username and password
                String id = String.valueOf(rs.getInt("id"));
                String name = rs.getString("equipment_name");
                String category1 = rs.getString("category");
                String quantity1 = String.valueOf(rs.getInt("quantity"));

                //String array for store data into jtable
                String tbData[] = {id,name,quantity1,category1};

                DefaultTableModel tblModel = (DefaultTableModel) InventoryTable.getModel();

                //add Strinf array dara into table
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_AddBtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // TODO add your handling code here:
      // TODO add your handling code here:
        try{
            String id1 = idTxt.getText().toLowerCase();
            int id = Integer.parseInt(id1);
            String equipment = EquipmentTf.getText().toLowerCase();
            String category = (String) categoryCbx.getSelectedItem();
            int quantity = (int) QuantityTf.getValue();
            
             // contact number validator
            
          
             if(EquipmentTf.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "First name is empty.");
            }
             if(categoryCbx.getSelectedItem().equals("Select Category")){
                JOptionPane.showMessageDialog(null, "Please Select an item");
                return;
            }
          
            else{
            InventoryHandler.UpdateInventory(id,equipment,quantity,category);
            JOptionPane.showMessageDialog(null, "Inventory updated");
            }
            

            idTxt.setText("");
            EquipmentTf.setText("");
            categoryCbx.setSelectedItem("Select category");
            QuantityTf.setValue(1);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Complete the input");
        }

        // clear the table before add
        DefaultTableModel model = (DefaultTableModel) InventoryTable.getModel();
        model.setRowCount(0);

        // to update the table
        try (Connection conn = DatabaseConnector.getConnection()) {
            String query = "SELECT * FROM inventorytable";
            PreparedStatement pstmt = conn.prepareStatement(query);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                // User exists with the provided username and password
                String id = String.valueOf(rs.getInt("id"));
                String name = rs.getString("equipment_name");
                String category = rs.getString("category");
                String quantity = String.valueOf(rs.getInt("quantity"));

                //String array for store data into jtable
                String tbData[] = {id,name,quantity,category};

                DefaultTableModel tblModel = (DefaultTableModel) InventoryTable.getModel();

                //add Strinf array dara into table
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }    
        
        
        
        
        
        
        
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void InventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InventoryTableMouseClicked
        // TODO add your handling code here:
          int i = InventoryTable.getSelectedRow();
        TableModel model = InventoryTable.getModel();
        
        idTxt.setText(model.getValueAt(i,0).toString());
        EquipmentTf.setText(model.getValueAt(i,1).toString());
        // to get the data from the spinner
        String spinner = model.getValueAt(i,2).toString();
        int spinner1 = Integer.parseInt(spinner);
        QuantityTf.setValue(spinner1);
        
        String equipment = model.getValueAt(i, 3).toString();
        for(int j = 0; j < categoryCbx.getItemCount(); j++){
            if(categoryCbx.getItemAt(j).toString().equalsIgnoreCase(equipment)){
                categoryCbx.setSelectedIndex(j);
            }
        }
        
        
        
    }//GEN-LAST:event_InventoryTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    
     public static void InventoryTable(){
    
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField EquipmentTf;
    private javax.swing.JTable InventoryTable;
    private javax.swing.JSpinner QuantityTf;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JComboBox<String> categoryCbx;
    private javax.swing.JTextField idTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
